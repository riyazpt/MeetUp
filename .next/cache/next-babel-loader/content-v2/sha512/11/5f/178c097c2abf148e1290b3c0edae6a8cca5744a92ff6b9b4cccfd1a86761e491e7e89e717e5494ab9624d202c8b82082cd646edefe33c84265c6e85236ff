{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\riyaz\\\\OneDrive\\\\Desktop\\\\react\\\\next.js\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths(context) {\n  const client = await MongoClient.connect(\"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollection = db.collection(\"meetup\");\n  const meetups = await meetUpCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetUpCollection = db.collection(\"meetup\");\n  const selectedMeetups = await meetUpCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: selectedMeetups\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/riyaz/OneDrive/Desktop/react/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","props","image","title","address","getStaticPaths","context","client","connect","db","meetUpCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","selectedMeetups","findOne"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG;AAHjB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AACD,OAAO,eAAeC,cAAf,CAA8BlB,OAA9B,EAAuC;AAC5C,QAAMgB,QAAQ,GAAGhB,OAAO,CAACe,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AACA,QAAMc,eAAe,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AAAEZ,IAAAA,GAAG,EAAEQ;AAAP,GAAzB,CAA9B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAEwB;AADF,GAAP;AAGD;AACD,eAAezB,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollection = db.collection(\"meetup\");\r\n  const meetups = await meetUpCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollection = db.collection(\"meetup\");\r\n  const selectedMeetups = await meetUpCollection.findOne({ _id: meetupId });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: selectedMeetups,\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}