{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\riyaz\\\\OneDrive\\\\Desktop\\\\react\\\\next.js\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetUpData.image,\n    title: props.meetUpData.title,\n    address: props.meetUpData.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/riyaz/OneDrive/Desktop/react/next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetUpData","image","title","address"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG;AAH5B;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQL,a;;AA6CT,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetUpData.image}\r\n      title={props.meetUpData.title}\r\n      address={props.meetUpData.address}\r\n    />\r\n  );\r\n}\r\nexport async function getStaticPaths(context) {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollection = db.collection(\"meetup\");\r\n  const meetups = await meetUpCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Ubaid:tHU3S8RRo4DynFw4@cluster0.m6skkby.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetUpCollection = db.collection(\"meetup\");\r\n  const selectedMeetups = await meetUpCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetUpData: selectedMeetups,\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}